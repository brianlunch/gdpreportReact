/*global chrome*/
import React from 'react';
import ImageAnnotation from '../ImageAnnotation/ImageAnnotation';
import './Report.css'
import it from '../../images/IrishTimes.PNG'
import consent from '../../images/consent.png'
import { getCurrentTab } from '../../Utils/helper'
import Tabs from 'react-bootstrap/Tabs'
import Tab from 'react-bootstrap/Tab'
import Help from '../Help/Help'



class Report extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            file: null
        };
        this.imgChange = this.imgChange.bind(this)
    }

    

    imgChange = (event) => {
        this.setState({
            file: URL.createObjectURL(event.target.files[0])
        })
    }


    componentDidMount() {

        getCurrentTab((tab) => {
            chrome.runtime.sendMessage({ type: 'popupInit', tabId: tab.id }, (response) => {
                if (response) {
                    this.setState({
                        images: response
                    });
                }

            });
        });
    }


    render() {

        var images = [it, consent]


        return (
            <div className="report">
                <Help claaName="no-print"/>

                <div class="row">
                    <div class="col-12">


                        <div className="imgAnnot">


                            {
                                <Tabs defaultActiveKey="0" className="no-print" id="uncontrolled-tab-example">
                                    {
                                        this.state.images != undefined ?
                                            this.state.images.map((imageObj, i) => (


                                                <Tab eventKey={i} title={"Screenshot " + (i + 1)} >
                                                    <ImageAnnotation img={imageObj.img} i={i+1} url={imageObj.url} time={imageObj.time} />
                                                </Tab>


                                            ))
                                            :
                                            null
                                    }
                                </Tabs>
                            }
                            <p className="genMsg">This doc was generated by <a href="https://brianlunch.github.io/ConsentAnnotationToolSite/#/">https://brianlunch.github.io/ConsentAnnotationToolSite/#/</a></p>
                        </div>
                    </div>

                </div>
            </div>
        );
    }
}

export default Report;
